@model TunePhere.Models.Artists
@using System.Security.Claims
@{
    ViewData["Title"] = "Trang nghệ sĩ";
}

@section Styles {
    <link rel="stylesheet" href="~/css/artist-profile.css" />
    <style>
        /* CSS nội tuyến để ghi đè lên mọi quy tắc khác */
        a, a:hover, a:focus, a:active, a:visited {
            text-decoration: none !important;
            border-bottom: none !important;
        }
        
        .song-item {
            text-decoration: none !important;
            color: white;
        }
        
        .song-item:hover {
            text-decoration: none !important;
            color: #bb86fc;
        }
        
        .profile-section a[href*="Songs/Details"]:hover,
        .profile-section a[href*="tan-hoc"]:hover {
            text-decoration: none !important;
        }
    </style>
}

<div class="artist-profile">
    <div class="profile-header">
        <div class="profile-cover" style="background-image: url('@Model.CoverImageUrl')">
            <div class="profile-overlay"></div>
            <div class="profile-info">
                <div class="profile-avatar">
                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <img src="@Model.ImageUrl" alt="@Model.ArtistName" />
                    }
                    else
                    {
                        <i class="fas fa-user-circle"></i>
                    }
                </div>
                <div class="profile-details">
                    <div class="profile-top">
                        <div>   
                            <span class="artist-type">Nghệ sĩ</span>
                            <h1>@Model.ArtistName</h1>
                        </div>
                        @if (User.Identity.IsAuthenticated && User.FindFirstValue(ClaimTypes.NameIdentifier) != Model.userId)
                        {
                            var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                            var isFollowing = Model.Followers != null && Model.Followers.Any(f => f.UserId == currentUserId);
                            <button class="follow-btn @(isFollowing ? "following" : "")" data-artist-id="@Model.ArtistId">
                                <i class="fas @(isFollowing ? "fa-user-check" : "fa-user-plus")"></i>
                                <span>@(isFollowing ? "Đang theo dõi" : "Theo dõi")</span>
                            </button>
                        }
                    </div>
                    <div class="artist-stats">
                        <a href="@Url.Action("Followers", "Artists", new { id = Model.ArtistId })" class="stat-link">
                            <span><i class="fas fa-users"></i> <span id="followers-count">@Model.GetFollowersCount()</span> người theo dõi</span>
                        </a>
                        <a href="@Url.Action("Following", "Artists", new { userId = Model.userId })" class="stat-link">
                            <span><i class="fas fa-user-friends"></i> Đang theo dõi</span>
                        </a>
                        <span><i class="fas fa-music"></i> @Model.Songs.Count() bài hát</span>
                        <span><i class="fas fa-compact-disc"></i> @Model.Albums.Count() album</span>
                        <span><i class="fas fa-heart"></i> @Model.Songs.Sum(s => s.LikeCount) lượt thích</span>
                        <span><i class="fas fa-play"></i> @Model.Songs.Sum(s => s.PlayCount) lượt nghe</span>
                    </div>
                </div>
            </div>
        </div>  
    </div>

    <div class="profile-content">
        <div class="profile-section">
            <div class="section-header">
                <h2>Giới thiệu</h2>
                @if (User.Identity.IsAuthenticated && User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.userId)
                {
                    <button class="edit-btn" onclick="location.href='@Url.Action("Edit", "Artists")'">
                        <i class="fas fa-edit"></i> Chỉnh sửa
                    </button>
                }
            </div>
            <p class="artist-bio">@Model.Bio</p>
        </div>

        <div class="profile-section">
            <div class="section-header">
                <h2>Album mới nhất</h2>
                <a href="@Url.Action("Index", "Albums", new { artistId = Model.ArtistId })" class="view-all">Xem tất cả</a>
            </div>
            <div class="albums-grid">
                @foreach (var album in Model.Albums.OrderByDescending(a => a.ReleaseDate).Take(4))
                {
                    <a href="@Url.Action("Details", "Albums", new { id = album.AlbumId })" class="album-card">
                        <div class="album-image">
                            <img src="@album.ImageUrl" alt="@album.AlbumName" />
                            <div class="album-overlay">
                                <button class="play-btn"><i class="fas fa-play"></i></button>
                            </div>
                        </div>
                        <div class="album-info">
                            <h3>@album.AlbumName</h3>
                            <p>@(DateTime.TryParse(album.ReleaseDate, out DateTime date) ? date.Year.ToString() : "") • @album.Songs.Count() bài hát</p>
                        </div>
                    </a>
                }
            </div>
        </div>

        <div class="profile-section">
            <div class="section-header">
                <h2>Bài hát nổi bật</h2>
                <a href="@Url.Action("Index", "Songs", new { artistId = Model.ArtistId })" class="view-all">Xem tất cả</a>
            </div>
            <div class="songs-list">
                @foreach (var song in Model.Songs.OrderByDescending(s => s.PlayCount).Take(5))
                {
                    <a href="@Url.Action("Details", "Songs", new { id = song.SongId, artistId = Model.ArtistId, fromArtist = true })" class="song-item">
                        <div class="song-image">
                            <img src="@song.ImageUrl" alt="@song.Title" />
                            <button class="play-btn"><i class="fas fa-play"></i></button>
                        </div>
                        <div class="song-info">
                            <h3>@song.Title</h3>
                            <p>@song.PlayCount lượt nghe • @song.LikeCount lượt thích</p>
                        </div>
                        <div class="song-duration">
                            <span>@song.Duration.ToString(@"mm\:ss")</span>
                        </div>
                    </a>
                }
            </div>
        </div>

        <div class="profile-section">
            <div class="section-header">
                <h2>Nghệ sĩ tương tự</h2>
                <a href="@Url.Action("SimilarArtists", "Artists", new { id = Model.ArtistId })" class="view-all">Xem tất cả</a>
            </div>
            <div class="artists-grid">
                @foreach (var artist in ViewBag.SimilarArtists)
                {
                    <a href="@Url.Action("Profile", "Artists", new { id = artist.ArtistId })" class="artist-card">
                        <div class="card-img-container artist-img">
                            <img src="@(string.IsNullOrEmpty(artist.ImageUrl) ? "/images/artist-placeholder.jpg" : artist.ImageUrl)" alt="@artist.ArtistName">
                            <div class="play-overlay">
                                <button class="play-btn">
                                    <i class="fas fa-play"></i>
                                </button>
                            </div>
                        </div>
                        <h3 class="artist-name">@artist.ArtistName</h3>
                        <p class="artist-type">
                            <i class="fas fa-music"></i> @artist.Songs.Count bài hát
                            <span class="mx-2">•</span>
                            <i class="fas fa-play"></i> @(ViewBag.ArtistPlayCounts != null && ViewBag.ArtistPlayCounts.ContainsKey(artist.ArtistId) ? ViewBag.ArtistPlayCounts[artist.ArtistId].ToString("N0") : "0") lượt nghe
                        </p>
                    </a>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.follow-btn').click(function(e) {
                e.preventDefault();
                const button = $(this);
                const artistId = parseInt(button.data('artist-id'));

                // Thêm loading state
                button.prop('disabled', true);
                
                $.ajax({
                    url: '/Artists/ToggleFollow',
                    type: 'POST',
                    data: { artistId: artistId },
                    success: function(response) {
                        if (response.success) {
                            if (response.isFollowing) {
                                button.addClass('following');
                                button.html('<i class="fas fa-user-check"></i><span>Đang theo dõi</span>');
                            } else {
                                button.removeClass('following');
                                button.html('<i class="fas fa-user-plus"></i><span>Theo dõi</span>');
                            }
                            $('#followers-count').text(response.followersCount);
                            if (response.message) {
                                alert(response.message);
                            }
                        } else {
                            alert(response.message || 'Có lỗi xảy ra, vui lòng thử lại sau');
                        }
                    },
                    error: function(xhr, status, error) {
                        alert('Có lỗi xảy ra: ' + (xhr.responseJSON?.message || error || 'Vui lòng thử lại sau'));
                    },
                    complete: function() {
                        button.prop('disabled', false);
                    }
                });
            });
        });
    </script>
} 