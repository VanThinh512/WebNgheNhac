@model IEnumerable<TunePhere.Models.Album>
@{
    ViewData["Title"] = $"Album của {ViewBag.Artist.ArtistName}";
}
<link rel="stylesheet" href="~/css/albums.css" />
<div class="container-fluid p-0">
    <!-- Header với ảnh nghệ sĩ -->
    <div class="artist-header position-relative" style="height: 400px;">
        <div class="position-absolute w-100 h-100" style="background: linear-gradient(rgba(0,0,0,0.4), rgba(13, 13, 13, 0.9)), url('@ViewBag.Artist.CoverImageUrl') no-repeat center center; background-size: cover; filter: brightness(1.2) contrast(1.1);">
        </div>
        <div class="position-absolute bottom-0 text-white p-5">
            <span class="artist-label mb-2">ALBUM</span>
            <h1 class="display-4 fw-bold text-shadow text-glow">@ViewBag.Artist.ArtistName</h1>
            <p class="lead opacity-90">@Model.Count() album</p>
        </div>
    </div>

    <div class="container mt-5">
        <!-- Back button và Create button -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <a href="@Url.Action("Profile", "Artists", new { id = ViewBag.Artist.ArtistId })" class="btn-back">
                <i class="fas fa-arrow-left me-2"></i>Quay lại trang nghệ sĩ
            </a>
            @if (User.Identity.IsAuthenticated && User.IsInRole("Artist") && ViewBag.IsOwner)
            {
                <a href="@Url.Action("Create", "Albums")" class="btn-create">
                    <i class="fas fa-plus-circle me-2"></i>Tạo album mới
                </a>
            }
        </div>

        <!-- Albums Grid -->
        <div class="albums-container">
            <div class="albums-grid">
                @foreach (var album in Model)
                {
                    <div class="album-card" oncontextmenu="return showContextMenu(event, @album.AlbumId)">
                        <div class="album-image-container">
                            <img src="@(string.IsNullOrEmpty(album.ImageUrl) ? "/images/default-album.jpg" : album.ImageUrl)" alt="@album.AlbumName" />
                            <div class="album-overlay">
                                <a href="@Url.Action("Details", new { id = album.AlbumId })" class="play-btn">
                                    <i class="fas fa-play"></i>
                                </a>
                            </div>
                        </div>
                        <div class="album-info">
                            <h3 class="album-title">@album.AlbumName</h3>
                            <div class="album-meta">
                                <span><i class="fas fa-music"></i> @album.numberSongs bài hát</span>
                                <span><i class="fas fa-clock"></i> @album.Time.ToString(@"mm\:ss")</span>
                            </div>
                            <p class="album-date">
                                @(DateTime.TryParse(album.ReleaseDate, out DateTime date) ? date.ToString("dd/MM/yyyy") : "")
                            </p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Context Menu -->
<div id="albumContextMenu" class="context-menu">
    <ul>
        <li onclick="handleMenuClick('details')"><i class="fas fa-info-circle"></i> Chi tiết album</li>
        @if (ViewBag.IsOwner)
        {
            <li onclick="handleMenuClick('edit')"><i class="fas fa-edit"></i> Chỉnh sửa album</li>
            <li onclick="handleMenuClick('delete')"><i class="fas fa-trash"></i> Xóa album</li>
        }
    </ul>
</div>

@section Scripts {
    <script>
        let selectedAlbumId = null;

        // Hàm hiển thị context menu khi chuột phải
        function showContextMenu(event, albumId) {
            event.preventDefault();

            selectedAlbumId = albumId;

            const contextMenu = document.getElementById('albumContextMenu');

            // Hiển thị context menu tại vị trí chuột
            contextMenu.style.display = 'block';
            contextMenu.style.left = event.pageX + 'px';
            contextMenu.style.top = event.pageY + 'px';

            return false;
        }

        // Hàm xử lý khi chọn một mục trong menu
        function handleMenuClick(action) {
            if (!selectedAlbumId) return;

            switch(action) {
                case 'details':
                    window.location.href = `/Albums/Details/${selectedAlbumId}`;
                    break;
                case 'edit':
                    window.location.href = `/Albums/Edit/${selectedAlbumId}`;
                    break;
                case 'delete':
                    window.location.href = `/Albums/Delete/${selectedAlbumId}`;
                    break;
            }

            // Ẩn context menu sau khi chọn
            document.getElementById('albumContextMenu').style.display = 'none';
        }

        // Ẩn context menu khi click ra ngoài
        document.addEventListener('click', function() {
            document.getElementById('albumContextMenu').style.display = 'none';
        });

        // Ẩn context menu khi nhấn Escape
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                document.getElementById('albumContextMenu').style.display = 'none';
            }
        });
    </script>
}